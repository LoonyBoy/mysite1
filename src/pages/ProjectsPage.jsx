import React, { useEffect, useRef, useMemo } from 'react'
import styled from 'styled-components'
import { gsap } from 'gsap'
import { ScrollTrigger } from 'gsap/ScrollTrigger'
import { useNavigate } from 'react-router-dom'
import { useParticles } from '../components/GlobalParticleManager'
import CustomCursor from '../components/CustomCursor'
import MobileNavigation from '../components/MobileNavigation'
import useParticleControl from '../hooks/useParticleControl'
import ScrollStack, { ScrollStackItem } from '../components/ScrollStack'

gsap.registerPlugin(ScrollTrigger)

const ProjectsContainer = styled.div`
  min-height: 100vh;
  min-height: 100dvh;
  background: transparent;
  position: relative;
  width: 100%;
  overflow-x: hidden;
  z-index: 1;
  
  @media (max-width: 768px) {
    overflow-y: auto;
    -webkit-overflow-scrolling: touch;
  }
`

const Section = styled.section`
  padding: 2rem;
  max-width: 1200px;
  margin: 0 auto;
  position: relative;
  z-index: 2;
  background: transparent; /* –ü—Ä–æ–∑—Ä–∞—á–Ω—ã–π —Ñ–æ–Ω —á—Ç–æ–±—ã –Ω–µ –ø–µ—Ä–µ–∫—Ä—ã–≤–∞—Ç—å —á–∞—Å—Ç–∏—Ü—ã */
  height: 100vh;
  display: flex;
  flex-direction: column;

  @media (max-width: 768px) {
    padding: 1rem;
    
    @supports (padding: max(0px)) {
      padding-left: max(1rem, env(safe-area-inset-left) + 1rem);
      padding-right: max(1rem, env(safe-area-inset-right) + 1rem);
    }
  }
`

const SectionTitle = styled.h2`
  font-size: clamp(2.5rem, 6vw, 4rem);
  font-weight: 400;
  margin-bottom: 2rem;
  text-align: center;
  opacity: 0;
  transform: translateY(50px);
  flex-shrink: 0;
  
  @media (max-width: 768px) {
    margin-bottom: 1rem;
  }
`

const ProjectList = styled.div`
  width: 100%;
  flex: 1;
  overflow: hidden;
`

const ProjectTile = styled.div`
  display: flex;
  justify-content: center;
`

const EntityCard = styled.article`
  background-color: rgba(255, 255, 255, 0.95);
  -webkit-backdrop-filter: grayscale(100%);
  backdrop-filter: grayscale(100%);
  color: #000000;
  border-radius: 12px;
  overflow: hidden;
  display: flex;
  flex-direction: column;
  width: 100%;
  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);

  // –¢–µ–∫—Å—Ç –∏ —Ç–µ–≥–∏ –±–µ–∑ —Å–º–µ—à–µ–Ω–∏—è
  > * {
    mix-blend-mode: normal;
  }
`

const CardLink = styled.div`
  cursor: pointer;
  display: flex;
  flex-direction: column;
  text-decoration: none;
  color: inherit;
`

const CardHeader = styled.header`
  padding: 1.5rem;
  flex: 1;
`

const CardTitle = styled.h2`
  margin: 0 0 0.5rem;
  font-size: 1.5rem;
  color: #000000;
`

const CardDescription = styled.p`
  margin: 0;
  font-size: 1rem;
  line-height: 1.4;
  color: #000000;
  opacity: 0.8;
`

const CardCover = styled.img`
  width: 100%;
  height: auto;
  object-fit: cover;
`

const TagList = styled.div`
  display: flex;
  flex-wrap: wrap;
  gap: 0.5rem;
  padding: 1rem 1.5rem 1.5rem;
`

const TagButton = styled.button`
  background: rgba(0, 0, 0, 0.05);
  border: none;
  border-radius: 4px;
  padding: 0.3rem 0.6rem;
  font-size: 0.8rem;
  color: #000000;
  cursor: pointer;
`

const NavigationEdge = styled.div`
  position: fixed;
  top: 0;
  left: 0;
  width: 350px;
  height: 100vh;
  z-index: 5;
  cursor: none;
  transition: all 0.3s ease;
  
  &:hover {
    background: linear-gradient(to right, rgba(209, 72, 54, 0.15), transparent);
    backdrop-filter: blur(10px);
  }
  
  @media (max-width: 768px) {
    display: none;
  }
`

const NavigationHint = styled.div`
  position: fixed;
  top: 50%;
  left: 5rem;
  transform: translateY(-50%);
  color: rgba(255, 255, 255, 0.8);
  font-size: 1.1rem;
  font-weight: 500;
  opacity: 0;
  transition: all 0.3s ease;
  z-index: 6;
  pointer-events: none;
  text-shadow: 0 2px 10px rgba(0, 0, 0, 0.5);
  
  &.visible {
    opacity: 1;
    transform: translateY(-50%) translateX(15px);
  }
  
  @media (max-width: 768px) {
    display: none;
  }
`

const ProjectsPage = () => {
  const projectsRef = useRef(null)
  const navigate = useNavigate()
  const { camera } = useParticles()
  const isTransitioningRef = useRef(false) // –ó–∞—â–∏—Ç–∞ –æ—Ç –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –∫–ª–∏–∫–æ–≤
  
  // –ú–µ–º–æ–∏–∑–∏—Ä—É–µ–º –æ–±—ä–µ–∫—Ç sensitivity —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ —Ö—É–∫–∞
  const sensitivity = useMemo(() => ({
    wheel: 0.002,
    touch: 0.005
  }), [])
  
  // –ü–æ–¥–∫–ª—é—á–∞–µ–º –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —á–∞—Å—Ç–∏—Ü–∞–º–∏
  const { resetRotation } = useParticleControl(camera, true, sensitivity)

  useEffect(() => {
    const isMobile = window.innerWidth <= 768 || 'ontouchstart' in window

    // –ê–Ω–∏–º–∞—Ü–∏—è —á–∞—Å—Ç–∏—Ü —Ç–µ–ø–µ—Ä—å –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è –≤ GlobalParticleManager
    // –Ω–∞ –æ—Å–Ω–æ–≤–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –ø–µ—Ä–µ—Ö–æ–¥–∞

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø—Ä–∏—Ö–æ–¥–∏–º –ª–∏ –º—ã —Å –¥–æ–º–∞—à–Ω–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    const isComingFromHome = sessionStorage.getItem('coming-from-home')
    
    if (isComingFromHome) {
      // –ë—ã—Å—Ç—Ä–æ–µ –ø–æ—è–≤–ª–µ–Ω–∏–µ
      gsap.set(projectsRef.current, {
        opacity: 0
      })

      gsap.to(projectsRef.current, {
        opacity: 1,
        duration: 0.3,
        ease: "power2.out"
      })
      
      sessionStorage.removeItem('coming-from-home')
    } else {
      // –û–±—ã—á–Ω–∞—è –∞–Ω–∏–º–∞—Ü–∏—è –≤—Ö–æ–¥–∞ (–ø—Ä—è–º–æ–µ –ø–æ—Å–µ—â–µ–Ω–∏–µ)
      gsap.to(projectsRef.current, {
        opacity: 1,
        duration: 0.3
      })
    }

    // –ê–Ω–∏–º–∞—Ü–∏—è –∑–∞–≥–æ–ª–æ–≤–∫–∞
    const h2Element = projectsRef.current?.querySelector('h2')
    if (h2Element) {
      gsap.to(h2Element, {
        opacity: 1,
        y: 0,
        duration: 0.8,
        delay: 0.4
      })
    }

    // –ê–Ω–∏–º–∞—Ü–∏—è –∫–∞—Ä—Ç–æ—á–µ–∫ –ø—Ä–æ–µ–∫—Ç–æ–≤
    const projectCards = projectsRef.current?.querySelectorAll('.project-card')
    if (projectCards && projectCards.length > 0) {
      projectCards.forEach((card, index) => {
        gsap.to(card, {
          opacity: 1,
          y: 0,
          duration: 0.8,
          delay: 0.6 + index * 0.2
        })
      })
    }

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–≤–µ–¥–µ–Ω–∏—è –Ω–∞ –ª–µ–≤—ã–π –∫—Ä–∞–π
    const navigationEdge = document.querySelector('.navigation-edge-left')
    const navigationHint = document.querySelector('.navigation-hint-left')
    
    if (navigationEdge && navigationHint && !isMobile) {
      const handleMouseEnter = () => {
        navigationHint.classList.add('visible')
        document.body.style.cursor = 'none'
      }
      
      const handleMouseLeave = () => {
        navigationHint.classList.remove('visible')
        document.body.style.cursor = 'none'
      }
      
      const handleClick = () => {
        // –ê–Ω–∏–º–∞—Ü–∏—è —á–∞—Å—Ç–∏—Ü —Ç–µ–ø–µ—Ä—å –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
        // –≤ GlobalParticleManager –Ω–∞ –æ—Å–Ω–æ–≤–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
        
        // –ë—ã—Å—Ç—Ä–æ–µ –∑–∞—Ç—É—Ö–∞–Ω–∏–µ –±–µ–∑ —Å–º–µ—â–µ–Ω–∏—è
        gsap.to(projectsRef.current, {
          opacity: 0,
          duration: 0.3,
          ease: "power2.out",
          onComplete: () => {
            // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–ª–∞–≥–∏ –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏—è –Ω–∞ –¥–æ–º–∞—à–Ω—é—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
            sessionStorage.setItem('returning-to-home', 'true')
            sessionStorage.setItem('coming-from-projects', 'true')
            navigate('/home')
          }
        })
        
        // –ê–Ω–∏–º–∞—Ü–∏—è –∑–∞—Ç—É—Ö–∞–Ω–∏—è –ø–æ–¥—Å–∫–∞–∑–∫–∏
        const hint = document.querySelector('.navigation-hint-left')
        if (hint) {
          gsap.to(hint, {
            opacity: 0,
            duration: 0.3
          })
        }
      }
      
      navigationEdge.addEventListener('mouseenter', handleMouseEnter)
      navigationEdge.addEventListener('mouseleave', handleMouseLeave)
      navigationEdge.addEventListener('click', handleClick)
      
      return () => {
        navigationEdge.removeEventListener('mouseenter', handleMouseEnter)
        navigationEdge.removeEventListener('mouseleave', handleMouseLeave)
        navigationEdge.removeEventListener('click', handleClick)
        ScrollTrigger.getAll().forEach(trigger => trigger.kill())
      }
    }

    return () => {
      ScrollTrigger.getAll().forEach(trigger => trigger.kill())
    }
  }, [navigate])

  const projects = [
    {
      title: "LightLab Studio",
      description: "–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π —Å–∞–π—Ç –¥–ª—è —Ñ–æ—Ç–æ—Å—Ç—É–¥–∏–∏ —Å –≥–∞–ª–µ—Ä–µ–µ–π —Ä–∞–±–æ—Ç, –æ–Ω–ª–∞–π–Ω-–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ–º –∏ –∞–¥–∞–ø—Ç–∏–≤–Ω—ã–º –¥–∏–∑–∞–π–Ω–æ–º. –†–µ–∞–ª–∏–∑–æ–≤–∞–Ω —Å –∞–∫—Ü–µ–Ω—Ç–æ–º –Ω–∞ –≤–∏–∑—É–∞–ª—å–Ω—É—é —Å–æ—Å—Ç–∞–≤–ª—è—é—â—É—é –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –æ–ø—ã—Ç.",
      tech: ["React", "GSAP", "WebGL", "Node.js"],
      route: "/project/lightlab"
    },
    {
      title: "Raykhan Telegram WebApp",
      description: "Telegram Web App –¥–ª—è –ø–∞—Ä—Ñ—é–º–µ—Ä–Ω–æ–≥–æ –±—Ä–µ–Ω–¥–∞ —Å –∫–∞—Ç–∞–ª–æ–≥–æ–º –∞—Ä–æ–º–∞—Ç–æ–≤, —Å–∏—Å—Ç–µ–º–æ–π –∑–∞–∫–∞–∑–æ–≤ –∏ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–µ–π —Å Telegram Bot API. –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤.",
      tech: ["Vue.js", "Telegram API", "Express", "MongoDB"]
    }
  ]

  const handleProjectClick = (project) => {
    if (project.route && !isTransitioningRef.current) {
      console.log('üöÄ Starting LightLab case page transition with flash')
      isTransitioningRef.current = true // –ë–ª–æ–∫–∏—Ä—É–µ–º –¥–∞–ª—å–Ω–µ–π—à–∏–µ –∫–ª–∏–∫–∏
      
      // –°–æ–∑–¥–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç –≤—Å–ø—ã—à–∫–∏
      const flashOverlay = document.createElement('div')
      flashOverlay.style.cssText = `
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: #ffffff;
        z-index: 10000;
        opacity: 0;
        pointer-events: none;
      `
      document.body.appendChild(flashOverlay)
      
      // –ê–Ω–∏–º–∞—Ü–∏—è –≤—Å–ø—ã—à–∫–∏
      gsap.to(flashOverlay, {
        opacity: 1,
        duration: 0.3,
        ease: "power2.out",
        onComplete: () => {
          // –ü–æ—Å–ª–µ –≤—Å–ø—ã—à–∫–∏ –ø–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ –Ω–æ–≤—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
          navigate(project.route)
          
          // –£–¥–∞–ª—è–µ–º —ç–ª–µ–º–µ–Ω—Ç –≤—Å–ø—ã—à–∫–∏ —á–µ—Ä–µ–∑ –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è
          setTimeout(() => {
            if (document.body.contains(flashOverlay)) {
              document.body.removeChild(flashOverlay)
            }
            // –†–∞–∑–±–ª–æ–∫–∏—Ä—É–µ–º –∫–ª–∏–∫–∏ —á–µ—Ä–µ–∑ –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è
            setTimeout(() => {
              isTransitioningRef.current = false
            }, 1000)
          }, 100)
        }
      })
    } else if (project.route && isTransitioningRef.current) {
      console.log('üö´ Click blocked - transition in progress')
    }
  }

  return (
    <ProjectsContainer>
      <CustomCursor />
      
      <NavigationEdge className="navigation-edge-left" />
      <NavigationHint className="navigation-hint-left">
        ‚Üê –î–æ–º–æ–π
      </NavigationHint>
      
      <Section ref={projectsRef}>
        <SectionTitle>–ü—Ä–æ–µ–∫—Ç—ã</SectionTitle>
        <ProjectList>
          <ScrollStack
            itemDistance={120}
            itemScale={0.05}
            itemStackDistance={40}
            stackPosition="25%"
            scaleEndPosition="15%"
            baseScale={0.9}
            rotationAmount={2}
            blurAmount={0.5}
            onStackComplete={() => console.log('Stack animation completed')}
          >
            {projects.map(project => (
              <ScrollStackItem key={project.title}>
                <ProjectTile>
                  <EntityCard>
                    <CardLink onClick={() => handleProjectClick(project)}>
                      <CardHeader>
                        <CardTitle>{project.title}</CardTitle>
                        <CardDescription>{project.description}</CardDescription>
                      </CardHeader>
                      <TagList>
                        {project.tech.map(tag => (
                          <TagButton key={tag}>{tag}</TagButton>
                        ))}
                      </TagList>
                    </CardLink>
                  </EntityCard>
                </ProjectTile>
              </ScrollStackItem>
            ))}
          </ScrollStack>
        </ProjectList>
      </Section>
        
      <MobileNavigation />
    </ProjectsContainer>
  )
}

export default ProjectsPage 